 

      dyne.org autoproduzioni & the FreakNet Medialab

                       proudly present:

            __  __       ____  _____    ___   ___  
           |  \/  |_   _/ ___|| ____|  / _ \ / _ \ 
           | |\/| | | | \___ \|  _|   | | | | (_) |
           | |  | | |_| |___) | |___  | |_| |\__, |
           |_|  |_|\__,_|____/|_____|  \___(_) /_/ 
                               codename "COTURNIX"

 this is RASTA SOFTWARE, Jah Rastafari Livity bless your freedom!

             :: the Multiple Streaming Engine ::
                    http://muse.dyne.org

This application is being developed in the hope to provide the Free
Software community a user friendly tool for network audio streaming,
making life easier for indypendent free speech radios wanting to
stream via http on icecast servers.

MuSE is an application for mixing, encoding, and network streaming of
sound.  MuSE streams via http on icecast servers, it can serve and
also listen its own stream, players are available on every computer:
xmms, freeamp, winamp, itunes are good ones.

MuSE can simultaneously mix up to 6 encoded audio bitstreams (from
files or network, ogg, mp3, wav and other common sound formats), plus
an input signal from microphone.

MuSE offers an intuitive interface to be operated in realtime, while
it can also run slick from the Unix commandline.





***** Internals:

MuSE is written in C++ and is a multithreaded application. It reads
streams using the included libmpeg library (mp3 format) and it can
optionally link the OggVorbis library to read ogg files. For encoding
the sound into mp3 or ogg it can link either or both LAME and
OggVorbis as shared libraries. MuSE also features a user interface
using the GTK+ widget library and a console interface using ncurses.

Resampling of any input is done with bicubic interpolation to 44khz
stereo format, then channels get mixed together and encoded to the
desired quality by the selected codec.

Separate threads are running for each decoder, the mixer and the
encoders, while the flow is synced thru FIFO pipes which implement
mutex locking and avoid well race conditions.

To have an idea of the API functions that a GUI should implement and
use have a look at jmixer.h and gui.h files.




***** Libraries:

- LAME (optional)
  Lame can be installed but is no more needed, in particular
  libmp3lame and the header lame.h must be properly installed.

- OGG VORBIS (optional)
  You can compile and install libogg and libvorbis on your machine
  before compiling MuSE; the configure script will recognize them and
  include support for decoding and mixing of .ogg files.

- GTK+ (optional)
  if libgtk and all the related libraries are present, MuSE will
  compile the GTK+ graphic user interface for interactive use and
  additional fun.

- NCURSES (optional)
  if libncurses is present, MuSE will compile a text console
  interactive interface to be used into ASCII terminals.

- SNDFILE (optional)
  if libsndfile is present then you'll be able to play uncompressed
  sound files like wav, aiff, snd, voc, pvf, mat, au, sf etc.



***** Compile and install:

- you can get latest version of lame: (if you already have lame and
  libmp3lame jump to point 2, after checking that version is >3.89)
  with 'lame --version'
  or download it from www.mp3dev.org/mp3 and follow the simple
  instructions to get installed this wonderful GPL mp3 encoder.

- install libogg and libvorbis:
  http://www.xiph.org/ogg/vorbis/index.html

if you don't install any of the above, MuSE will be a simple player.

- compile: cd MuSE-x.x.x ; ./configure (or try ./configure --help to
  have listed some compile options) ; make ; make install

you can also make a debian package and debian aided compilation with:
fakeroot debian/rules binary
this command will build debian packages for you!

***** for usage instructions refer to the USAGE file




KNOW MORE go to the website on http://muse.dyne.org

BUG REPORTING is REALLY APPRECIATED! BUT TAKE CARE TO DO IT WELL:
please ALWAYS REPORT the muse --version you are running and possibly
run the binary with gdb giving us the backtrace of the error.

if you understand the above, please go to http://bugs.dyne.org and
submit a BUG!!!

you have new ideas for MuSE? join the mailing list!
 send a mail to muse-subscribe@dyne.org
 or use the web interface on http://lists.dyne.org
we are also on irc.freenode.net channel #dyne




===== AUTHORS

MuSE is copyleft (c) 2000-2004 by Denis "jaromil" Rojo

MuSE's GTK+ GUI is copyleft (c) 2001-2004 by Antonino "nightolo" Radici

MuSE's NCURSES GUI is copyleft (c) 2002-2004 by Luca "rubik" Profico

MuSE's first GUI is copyleft (c) 2000-2001 by August Black

included resampling algos are copyleft (c) 2002 by Matteo "MoP" Nastasi

part of the redistributed code is copyright by the respective authors,
please refer to the AUTHORS file and to the supplied sourcecode for
further information and to COPYING for the full license.

for MuSE's development, the author and mantainer has been supported by
PUBLIC VOICE Lab ........ [ http://www.pvl.at ]
SERVUS.AT ............... [ http://www.servus.at ]




***** PLEASE DONATE!

If you can afford to donate us some money let us know, we also need
new and old working hardware.

We can reach to meet easily in Italy and Austria, especially Vienna,
Catania, Roma, Firenze, Milano

you can send a mail or make a phonecall to 

 dyne.org autoproduzioni
 fugbachgasse 12 / 18
 1020 Vienna, Austria
 mail: hackers@dyne.org
 tel +43 1 9256318

THANKS, a thousand flowers will blossom!





== DISCLAIMER

This source code is free software; you can redistribute it and/or
modify it under the terms of the GNU Public License as published 
by the Free Software Foundation; either version 2 of the License,
or (at your option) any later version.

This source code is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Please refer to the GNU Public License for more details.

You should have received a copy of the GNU Public License along with
this source code; if not, write to:
Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
